<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Special Topics on darktable user manual (development version)</title>
    <link>https://darktable-org.github.io/dtdocs/special-topics/</link>
    <description>Recent content in Special Topics on darktable user manual (development version)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://darktable-org.github.io/dtdocs/special-topics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>memory</title>
      <link>https://darktable-org.github.io/dtdocs/special-topics/memory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/special-topics/memory/</guid>
      <description>darktable&amp;rsquo;s memory requirements are high. A simple calculation makes this clear. If you have a 20MPx image then, for precision reasons, darktable will store this internally as a 4 x 32-bit floating point cell for each pixel. Each full image of this size will therefore need about 300MB of memory. As we want to process the image, we will at least need two buffers for each module â€“ one for input and one for output.</description>
    </item>
    
    <item>
      <title>variables</title>
      <link>https://darktable-org.github.io/dtdocs/special-topics/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/special-topics/variables/</guid>
      <description>darktable supports variable substitution in a number of modules and preference settings. For example:
 Defining file names in the export selected lighttable module Displaying image information in the darkroom&amp;rsquo;s image information line Displaying image information in the lighttable&amp;rsquo;s overlays and tooltips (see preferences &amp;gt; lighttable) Placing text on an image in the watermark processing module  ðŸ”—available variables The following variables are available, though they may not all be available in all contexts:</description>
    </item>
    
    <item>
      <title>default module order</title>
      <link>https://darktable-org.github.io/dtdocs/special-topics/module-order/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/special-topics/module-order/</guid>
      <description>The following sections describe the default module order in the new scene-referred workflow and the legacy display-referred workflow. Note that in the following sections the module order goes from top (input file) to bottom (output image).
ðŸ”—scene-referred module order The default ordering of modules when using the new scene-referred workflow is as follows:
 raw black/white point invert (deprecated) white balance highlight reconstruction chromatic aberrations hot pixels raw denoise demosaic denoise (profiled) surface blur rotate pixels scale pixels lens correction haze removal perspective correction orientation crop and rotate liquify spot removal retouch exposure local tone mapping (deprecated) tone equalizer graduated density unbreak input profile legacy equalizer input color profile negadoctor astrophoto denoise color look up table defringe contrast equalizer lowpass highpass sharpen lut 3D color mapping channel mixer (deprecated) basic adjustments color balance rgb curve rgb levels base curve filmic (legacy) FILMIC RGB &amp;ndash; transition from scene-referred to display-referred space contrast brightness saturation tone curve levels shadows and highlights zone system (deprecated) global tonemap (deprecated) fill light (deprecated) local contrast color correction color contrast velvia vibrance color zones bloom colorize lowlight vision monochrome grain soften split-toning vignetting color reconstruction output color profile dithering framing watermark  key:</description>
    </item>
    
    <item>
      <title>darktable&#39;s color pipeline</title>
      <link>https://darktable-org.github.io/dtdocs/special-topics/color-pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/special-topics/color-pipeline/</guid>
      <description>Most image processing applications come from the 1990s and/or inherit a 1990s workflow. These applications processed images encoded with 8 bit unsigned integers because it was more memory and computationally efficient. However, due to the use of an integer format (which implies rounding errors) they had to apply a &amp;ldquo;gamma&amp;rdquo; (essentially a transfer function applying a power 1/2.2 or 1/2.4 to encode the RGB values) and increase the bit-depth in the low-lights in order to reduce rounding errors there (humans are very sensitive to low-light details).</description>
    </item>
    
    <item>
      <title>contributing to dtdocs</title>
      <link>https://darktable-org.github.io/dtdocs/special-topics/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/special-topics/contributing/</guid>
      <description>This page defines the style guide for dtdocs and information about how to contribute to the project.
It is included in the user manual so that you can see how the page is rendered as well as how it is written. Please go to GitHub to see the source for this page.
ðŸ”—format This website is authored in pure markdown, using some extensions. It is initially designed to work with the Hugo SSG but indended to be portable enough that it can be easily rendered with another application if required.</description>
    </item>
    
  </channel>
</rss>
